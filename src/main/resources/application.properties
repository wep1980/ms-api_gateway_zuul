# MICRO SERVIÇO CLIENTE EUREKA, PRECISA TER A LOCALIZAÇÃO DO SERVIDOR EUREKA

.application.name=api-gateway-zuul

#Porta padrao de um cliente Zuul. caminho do servidor zuul
server.port=8765


#Nome da instancia gerada no servidor Eureka
#eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#Cinfigurando o projeto como cliente eureka, reconhecendo a localização do eureka
# Trocada a referencia do servidor, de localhost para eureka-server(nome do container)
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka


# Aguardar ate 1 minuto para chamar o micro serviço, sem utilizar o recurso alternativo. O tempo do Hystrix tem sempre que ser maior que o ribbon
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

# Conexao 10000
ribbon.ConnectTimeout=10000

# Leitura 20000
ribbon.ReadTimeout=20000


#Definindo as rotas para o zuul fazer o roteamento dos micro serviços


zuul.routes.trabalhador.service-id=recursos-humanos-trabalhadores
# Caminho indicado na url para acessar esse micro serviço pelo zuul
zuul.routes.trabalhador.path=/recursos-humanos-trabalhadores/**


zuul.routes.folhapagamento.service-id=recursos-humanos-folha-pagamento
# Caminho indicado na url para acessar esse micro serviço pelo zuul
zuul.routes.folhapagamento.path=/recursos-humanos-folha-pagamento/**


zuul.routes.usuario.service-id=usuario
# Caminho indicado na url para acessar esse micro serviço pelo zuul
zuul.routes.usuario.path=/usuario/**


zuul.routes.oauth.service-id=oauth
# Caminho indicado na url para acessar esse micro serviço pelo zuul
zuul.routes.oauth.path=/oauth/**


# Configurando o processo de autorização
zuul.routes.oauth.sensitive-headers=Cookie,Set-Cookie





